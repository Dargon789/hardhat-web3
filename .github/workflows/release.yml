name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - v-next

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # This allows us to push to the repository and create GitHub releases
      pull-requests: write # This allows us to create pull requests
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Set up the environment
        uses: ./.github/actions/setup-env

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Create Release Pull Request
        id: pr
        env:
          # NOTE: If we use the GITHUB_TOKEN to create the release PR, the checks will not be triggered automatically
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN || github.token }}
        uses: changesets/action@v1
        with:
          version: node scripts/version-alpha.mjs

      - name: Build All Packages
        if: steps.pr.outputs.hasChangesets == 'false'
        run: pnpm run --recursive -no-bail --filter './v-next/**' --if-present build

      - name: Publish All Packages (dry-run)
        if: steps.pr.outputs.hasChangesets == 'false'
        run: pnpm publish --filter "./v-next/**" -r --no-git-checks --tag next --access public --dry-run

      # NOTE: When running publish on an already published package we expect it to succeed but not to release anything and not include + hardhat@ in the output.
      # If it does, however, include + hardhat@ in the output, it's OK, because we'll just update the release without moving the release tag forward.
      - name: Publish All Packages
        id: publish
        if: steps.pr.outputs.hasChangesets == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          pnpm publish --filter "./v-next/**" -r --no-git-checks --tag next --access public | tee -a $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Prepare GitHub release
        id: release
        if: steps.pr.outputs.hasChangesets == 'false'
        env:
          STEPS_PUBLISH_OUTPUTS_STDOUT: ${{ steps.publish.outputs.stdout }}
        run: node scripts/prepare-github-release.mjs

      - name: Create GitHub Release
        if: steps.release.outputs.published == 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # NOTE: The action updates the release if it already exists
        uses: galargh/action-gh-release@571276229e7c9e6ea18f99bad24122a4c3ec813f # https://github.com/galargh/action-gh-release/pull/1
        with:
          draft: false
          tag_name: hardhat@${{ steps.release.outputs.version }}
          generate_release_notes: false
          target_commitish: ${{ github.sha }}
          make_latest: ${{ steps.release.outputs.latest == 'true' }}
          prerelease: ${{ steps.release.outputs.prerelease == 'true' }}
          body: ${{ steps.release.outputs.body }}
          token: ${{ github.token }}
